name: Build Lemon iOS Dylib

on:
  push:
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Cache ios-cmake toolchain
        id: cache-ios
        uses: actions/cache@v3
        with:
          path: ios.toolchain.cmake
          key: ios-cmake-v1

      - name: Download ios-cmake if not cached
        if: steps.cache-ios.outputs.cache-hit != 'true'
        run: |
          curl -L -o ios.toolchain.cmake \
            https://github.com/leetal/ios-cmake/raw/master/ios.toolchain.cmake

      - name: Build dylib for iOS
        run: |
          # 假设 C++ 源码在 src/main/cpp 下
          cd src/main/cpp

          # 用 ios.toolchain.cmake 作为交叉编译工具链
          cmake -B build \
            -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/ios.toolchain.cmake \
            -DSTATICLIB=OFF \
            -DMACOS=ON \
            -DPLATFORM=OS64 \
            -DCMAKE_C_FLAGS=-Wno-error=implicit-function-declaration

          cmake --build build --config RelWithDebInfo --target mobileglues

          # 假设目标 dylib 名称是 libmobileglues.dylib
          codesign -s - build/libmobileglues.dylib

      - name: Upload dylib artifact
        uses: actions/upload-artifact@v4
        with:
          name: Lemon-iOS-dylib
          # 路径用相对路径，方便别的分支/目录切换
          path: src/main/cpp/build/libmobileglues.dylib